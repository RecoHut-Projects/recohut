# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/utils/utils.data.ipynb (unless otherwise specified).

__all__ = ['music30', 'music30_sample', 'DATASETS', 'list_datasets', 'load_dataset']

# Cell
import pandas as pd
import tempfile
import os

from .common_utils import download_url

# Cell
music30 = {
        'url': 'https://github.com/RecoHut-Datasets/30music/raw/v3/sessions.parquet.snappy',
        'type': 'pandas_df',
        'format': 'parquet.snappy',
        'nrows': 3408682,
        'columns': ['session_id','user_id','ts','playtime'],
        }

# Cell
music30_sample = {
        'url': 'https://github.com/RecoHut-Datasets/30music/raw/v3/sessions_sample_10.parquet.snappy',
        'type': 'pandas_df',
        'format': 'parquet.snappy',
        'nrows': 343182,
        'columns': ['session_id','user_id','ts','playtime'],
        }

# Cell
DATASETS = {
    'music30': music30,
    'music30_sample': music30_sample,
}

# Cell
def list_datasets():
    return pd.DataFrame(DATASETS).T

# Cell
def load_dataset(data_id, data_dir=None, log=False):
    dataset_list = list(list_datasets().index)
    assert data_id in dataset_list, f'data id not exist, available ids are {dataset_list}'

    if data_dir is None:
        data_dir = os.path.join(tempfile.gettempdir(), data_id)

    data_info = list_datasets().loc[data_id]
    path = download_url(data_info.url, data_dir, log=log)

    if data_info.format == 'parquet.snappy':
        df = pd.read_parquet(path)

    return df